{"version":3,"sources":["events/event-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBASI,4BAAoB,aAA2B;oBAA3B,kBAAa,GAAb,aAAa,CAAc;oBAR/C,cAAS,GAAW,YAAY,CAAC;oBACjC,eAAU,GAAW,EAAE,CAAC;oBACxB,gBAAW,GAAW,CAAC,CAAC;oBACxB,cAAS,GAAY,KAAK,CAAC;gBAO3B,CAAC;gBAED,wCAAW,GAAX;oBACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;gBACrC,CAAC;gBAED,qCAAQ,GAAR;oBAAA,iBAMC;oBALG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,gDAAgD;oBAChD,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;yBACzB,SAAS,CAAE,UAAA,MAAM,IAAK,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,EAC/B,UAAA,KAAK,IAAM,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;gBAC/D,CAAC;gBAED,4CAAe,GAAf,UAAgB,OAAe;oBAC3B,IAAI,CAAC,SAAS,GAAG,cAAc,GAAG,OAAO,CAAC;gBAC9C,CAAC;gBAlCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,WAAW,EAAE,sCAAsC;wBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;wBAClD,KAAK,EAAE,CAAC,mCAAe,CAAC;wBACxB,UAAU,EAAE,CAAC,gCAAc,CAAC;qBAC/B,CAAC;;sCAAA;gBA6BF,yBAAC;YAAD,CA5BA,AA4BC,IAAA;YA5BD,mDA4BC,CAAA","file":"event-list.component.js","sourcesContent":["import { Component, OnInit } from 'angular2/core';\nimport { IEvent } from './event';\nimport { EventFilterPipe } from './event-filter.pipe';\nimport { ThumbComponent } from '../shared/thumb.component';\nimport { EventService } from './event.service';\n\n@Component({\n    selector: 'el-events',\n    templateUrl: 'app/events/event-list.component.html',\n    styleUrls: ['app/events/event-list.component.css'],\n    pipes: [EventFilterPipe],\n    directives: [ThumbComponent]\n})\nexport class EventListComponent implements OnInit {\n    pageTitle: string = 'Event List';\n    imageWidth: number = 50;\n    imageMargin: number = 2;\n    showImage: boolean = false;\n    searchCriteria: string;\n    events: IEvent[];\n    errorMessage: string;\n\n    constructor(private _eventService: EventService) {\n\n    }\n\n    toggleImage(): void {\n        this.showImage = !this.showImage;\n    }\n\n    ngOnInit(): void {\n        console.log('In OnInit');\n        // this.events = this._eventService.getEvents();\n        this._eventService.getEvents()\n            .subscribe( events  => this.events = events,\n                        error   => this.errorMessage = <any>error);\n    }\n\n    onRatingclicked(message: string): void {\n        this.pageTitle = 'Event List: ' + message;\n    }\n}\n"]}